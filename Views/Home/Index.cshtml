@* Main dashboard displaying user progress, service options, and community statistics with Apple-inspired design *@

@{
    ViewBag.Title = "Civic Link - Municipal Services";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userEngagement = ViewBag.UserEngagement as CivicLink.Models.UserEngagement;
}

<div class="container-fluid" style="margin-top: 2rem;">
    <!-- Hero Section -->
    <div class="hero-section glass-card">
        <div class="logo-container mb-4">
            <img src="~/Images/Logo_transparent.png"
                 alt="CivicLink Logo"
                 style="height: 80px; max-width: 300px; width: auto; object-fit: contain;" />
        </div>
        <h1 class="hero-title">Civic Link</h1>
        <p class="hero-subtitle">Connecting citizens with municipal services for a better community</p>

        @if (userEngagement != null)
        {
            <!-- Gamification User Stats Display -->
            <!-- This type of Gamification I actually used in the Varcity College Hackathon in August
                I used a lot of the skills I learnt during that hackathon to build this part of the project
            -->
            <div style="max-width: 600px; margin: 2rem auto 0; background: rgba(255, 255, 255, 0.8); backdrop-filter: blur(20px); border: 1px solid rgba(255, 255, 255, 0.3); border-radius: 25px; padding: 2rem; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; align-items: center; justify-content: space-around; margin-bottom: 2rem; flex-wrap: nowrap; gap: 1rem;">
                    <div style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1;">
                        <div style="width: 50px; height: 50px; border-radius: 15px; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; color: white; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); transition: all 0.3s ease; margin-bottom: 0.5rem; background: linear-gradient(135deg, #FF6B6B, #FF8E8E);">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <span style="font-size: 1.8rem; font-weight: 700; color: #1C1C1E; line-height: 1; margin-bottom: 0.25rem;">@userEngagement.Level</span>
                            <span style="font-size: 0.85rem; color: #8E8E93; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px;">Level</span>
                        </div>
                    </div>

                    <div style="width: 1px; height: 60px; background: linear-gradient(to bottom, transparent, rgba(142, 142, 147, 0.3), transparent); flex-shrink: 0;"></div>

                    <div style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1;">
                        <div style="width: 50px; height: 50px; border-radius: 15px; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; color: #333; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); transition: all 0.3s ease; margin-bottom: 0.5rem; background: linear-gradient(135deg, #FFD93D, #FFE066);">
                            <i class="fas fa-star"></i>
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <span style="font-size: 1.8rem; font-weight: 700; color: #1C1C1E; line-height: 1; margin-bottom: 0.25rem;">@userEngagement.Points</span>
                            <span style="font-size: 0.85rem; color: #8E8E93; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px;">Points</span>
                        </div>
                    </div>

                    <div style="width: 1px; height: 60px; background: linear-gradient(to bottom, transparent, rgba(142, 142, 147, 0.3), transparent); flex-shrink: 0;"></div>

                    <div style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1;">
                        <div style="width: 50px; height: 50px; border-radius: 15px; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; color: white; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); transition: all 0.3s ease; margin-bottom: 0.5rem; background: linear-gradient(135deg, #6BCF7F, #7ED492);">
                            <i class="fas fa-flag"></i>
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <span style="font-size: 1.8rem; font-weight: 700; color: #1C1C1E; line-height: 1; margin-bottom: 0.25rem;">@userEngagement.IssuesReported</span>
                            <span style="font-size: 0.85rem; color: #8E8E93; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px;">Reports</span>
                        </div>
                    </div>
                </div>

                <!-- Progress Ring for Next Level -->
                <!-- This does tend to bug out sometimes which has something to do with the way I setup GamificationService.cs-->
                <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 0.5rem; margin: 1rem 0;">
                    @{
                        var nextLevelPoints = (userEngagement.Level * 150);
                        var currentProgress = Math.Min((double)userEngagement.Points / nextLevelPoints * 100, 100);
                    }
                    <div style="position: relative; display: flex; align-items: center; justify-content: center;">
                        <svg width="60" height="60">
                            <circle cx="30"
                                    cy="30"
                                    r="25"
                                    stroke="rgba(0, 122, 255, 0.2)"
                                    stroke-width="4"
                                    fill="transparent" />
                            <circle cx="30"
                                    cy="30"
                                    r="25"
                                    stroke="#007AFF"
                                    stroke-width="4"
                                    fill="transparent"
                                    stroke-dasharray="157"
                                    stroke-dashoffset="@(157 - (157 * currentProgress / 100))"
                                    style="transition: stroke-dashoffset 1s ease-in-out; transform: rotate(-90deg); transform-origin: 50% 50%;" />
                        </svg>
                        <div style="position: absolute; display: flex; align-items: center; justify-content: center; font-size: 0.9rem; font-weight: 600; color: #007AFF;">
                            <span>@((int)currentProgress)%</span>
                        </div>
                    </div>
                    <div style="color: #8E8E93; font-size: 0.85rem; text-align: center;">
                        <small>@(nextLevelPoints - userEngagement.Points) to Level @(userEngagement.Level + 1)</small>
                    </div>
                </div>

                @if (userEngagement.Badges.Any())
                {
                    <div style="display: flex; justify-content: center; align-items: center; gap: 8px; margin-top: 1rem;">
                        @foreach (var badge in userEngagement.Badges.Take(3))
                        {
                            <div style="width: 36px; height: 36px; border-radius: 50%; background: linear-gradient(135deg, #007AFF, #5856D6); color: white; display: flex; align-items: center; justify-content: center; font-size: 0.9rem; box-shadow: 0 4px 15px rgba(0, 122, 255, 0.3); transition: all 0.3s ease; cursor: pointer;" title="@badge.Description">
                                <i class="@badge.IconClass"></i>
                            </div>
                        }
                        @if (userEngagement.Badges.Count > 3)
                        {
                            <div style="width: 36px; height: 36px; border-radius: 50%; background: linear-gradient(135deg, #8E8E93, #A0A0A0); color: white; display: flex; align-items: center; justify-content: center; font-size: 0.7rem; font-weight: 600; box-shadow: 0 4px 15px rgba(142, 142, 147, 0.3); transition: all 0.3s ease; cursor: pointer;" title="@(userEngagement.Badges.Count - 3) more badges">
                                <span>+@(userEngagement.Badges.Count - 3)</span>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>

    <!-- Service Options -->
    <div class="row g-4">
        <!-- Report Issues Card -->
        <div class="col-lg-4 col-md-6">
            <div class="service-card">
                <i class="fas fa-exclamation-triangle service-icon"></i>
                <h3 class="service-title">Report Issues</h3>
                <p class="service-description">
                    Report municipal issues in your community. From broken streetlights to water leaks,
                    help us keep our city running smoothly.
                </p>
                <a href="@Url.Action("ReportIssue", "Home")" class="btn btn-apple">
                    <i class="fas fa-plus me-2"></i>Report Now
                </a>
                <div class="mt-3">
                    <small class="text-muted">
                        <i class="fas fa-award me-1"></i>Earn 20-50 points per report
                    </small>
                </div>
            </div>
        </div>

        <!-- Local Events Card -->
        <div class="col-lg-4 col-md-6">
            <div class="service-card">
                <i class="fas fa-calendar-alt service-icon"></i>
                <h3 class="service-title">Local Events</h3>
                <p class="service-description">
                    Stay updated with community events, town hall meetings, and local announcements.
                </p>
                <a href="@Url.Action("Events", "Home")" class="btn btn-apple">
                    <i class="fas fa-calendar-check me-2"></i>View Events
                </a>
                <div class="mt-3">
                    <small class="text-muted">
                        <i class="fas fa-star me-1"></i>Discover local happenings
                    </small>
                </div>
            </div>
        </div>

        <!-- Service Status Card -->
        <!-- This is only coming in part 3 so can stay disabled for now-->
        <div class="col-lg-4 col-md-6">
            <div class="service-card" style="opacity: 0.6;">
                <i class="fas fa-tasks service-icon" style="color: var(--medium-gray);"></i>
                <h3 class="service-title" style="color: var(--medium-gray);">Request Status</h3>
                <p class="service-description">
                    Track the progress of your service requests and receive real-time updates.
                </p>
                <button class="btn btn-disabled" disabled>
                    <i class="fas fa-lock me-2"></i>Coming in POE Part 3
                </button>
                <div class="mt-3">
                    <small class="text-muted">
                        <i class="fas fa-clock me-1"></i>Available soon
                    </small>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats Section -->
    <div class="row mt-5">
        <div class="col-12">
            <div class="glass-card" style="padding: 2rem;">
                <div class="row text-center">
                    <div class="col-md-3 col-6 mb-3">
                        <div class="stat-item">
                            <i class="fas fa-users fa-2x text-primary mb-2"></i>
                            <div class="stat-number" style="color: var(--dark-color); font-size: 1.5rem;">1,247</div>
                            <div class="stat-label">Active Citizens</div>
                        </div>
                    </div>
                    <div class="col-md-3 col-6 mb-3">
                        <div class="stat-item">
                            <i class="fas fa-flag fa-2x text-success mb-2"></i>
                            <div class="stat-number" style="color: var(--dark-color); font-size: 1.5rem;">3,456</div>
                            <div class="stat-label">Issues Reported</div>
                        </div>
                    </div>
                    <div class="col-md-3 col-6 mb-3">
                        <div class="stat-item">
                            <i class="fas fa-check-circle fa-2x text-warning mb-2"></i>
                            <div class="stat-number" style="color: var(--dark-color); font-size: 1.5rem;">2,891</div>
                            <div class="stat-label">Issues Resolved</div>
                        </div>
                    </div>
                    <div class="col-md-3 col-6 mb-3">
                        <div class="stat-item">
                            <i class="fas fa-clock fa-2x text-info mb-2"></i>
                            <div class="stat-number" style="color: var(--dark-color); font-size: 1.5rem;">2.3 days</div>
                            <div class="stat-label">Avg. Response Time</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Call to Action -->
    <div class="row mt-4">
        <div class="col-12 text-center">
            <div class="glass-card" style="padding: 2rem; background: linear-gradient(135deg, rgba(0, 122, 255, 0.1), rgba(88, 86, 214, 0.1));">
                <h4 style="margin-bottom: 1rem; font-weight: 600;">Make a Difference in Your Community</h4>
                <p style="color: var(--medium-gray); margin-bottom: 2rem;">
                    Every report helps us build a better, safer, and more efficient city for everyone.
                </p>
                <div class="d-flex justify-content-center gap-3 flex-wrap">
                    <a href="@Url.Action("ReportIssue", "Home")" class="btn btn-apple">
                        <i class="fas fa-plus me-2"></i>Report Your First Issue
                    </a>
                    <a href="@Url.Action("IssuesList", "Home")" class="btn btn-secondary-apple">
                        <i class="fas fa-list me-2"></i>View All Issues
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>
        // Added some interactive animations
        document.addEventListener('DOMContentLoaded', function () {
            // Animate stat numbers on scroll
            // This took me a while to figure out but I really like the effect
            // Ive used this on wesbite builders befores so it was nice to do it in js
            const animateNumbers = () => {
                const statNumbers = document.querySelectorAll('.stat-number');
                statNumbers.forEach(stat => {
                    const finalNumber = parseInt(stat.textContent.replace(/[^\d]/g, ''));
                    if (finalNumber && !stat.hasAttribute('data-animated')) {
                        stat.setAttribute('data-animated', 'true');
                        animateValue(stat, 0, finalNumber, 2000);
                    }
                });
            };

            const animateValue = (element, start, end, duration) => {
                let startTimestamp = null;
                const step = (timestamp) => {
                    if (!startTimestamp) startTimestamp = timestamp;
                    const progress = Math.min((timestamp - startTimestamp) / duration, 1);
                    const current = Math.floor(progress * (end - start) + start);

                    if (element.textContent.includes('days')) {
                        element.textContent = (current / 10).toFixed(1) + ' days';
                    } else {
                        element.textContent = current.toLocaleString();
                    }

                    if (progress < 1) {
                        window.requestAnimationFrame(step);
                    }
                };
                window.requestAnimationFrame(step);
            };

            // Trigger animation when stats come into view
            // I really like this apple-ish inspired animations
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        animateNumbers();
                    }
                });
            });

            const statsSection = document.querySelector('.glass-card');
            if (statsSection) {
                observer.observe(statsSection);
            }

            // Added Hover effect
            // I always incorperate hover effects in all my projects, its a small detail that really helps make a good UX/UI
            const serviceCards = document.querySelectorAll('.service-card');
            serviceCards.forEach(card => {
                card.addEventListener('mouseenter', function () {
                    this.style.transform = 'translateY(-10px) scale(1.02)';
                });

                card.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
        });
    </script>